{"version":3,"sources":["components/header.js","components/footer.js","components/addUsers.js","components/createuser.js","actions/action-user.js","components/usersList.js","components/viewuser.js","components/updateuser.js","components/about.js","components/page404.js","store.js","reducers/reducers-users.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","href","id","Link","to","Component","Footer","AddUsers","state","userSet","addUser","e","preventDefault","user","name","_this","refs","value","email","balance","options","method","body","JSON","stringify","headers","Content-Type","fetch","then","res","json","setState","catch","err","console","log","this","Redirect","onSubmit","type","placeholder","ref","connect","UsersAdd","Route","path","component","allUsers","users","payload","searchUsers","deleteUser","UserList","targetUser","componentDidMount","props","dispatch","data","success","updateTarget","localStorage","setItem","_this2","map","index","key","_id","onClick","store","Viewuser","isSearch","searchValue","searchUser","search","concat","usersList","UpdateUser","setUpdate","getItem","parse","removeItem","updateUser","defaultValue","About","Page404","allReducer","combineReducers","arguments","length","undefined","action","filter","createStore","App","es","BrowserRouter","header","Switch","exact","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4b2f014.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <nav>\r\n                <div className=\"container\">  \r\n              <div className=\"nav-wrapper\">\r\n      <a href=\"#\" className=\"brand-logo\">Logo</a>\r\n      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n        <li><Link to='/' >View user</Link></li>\r\n        <li><Link to='/adduser' >Add user</Link></li>\r\n        <li><Link to='/about' >About</Link></li>\r\n      </ul>\r\n      </div>\r\n\r\n    </div>\r\n            </nav>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass  Footer extends Component {\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom'\r\nclass AddUsers extends Component {\r\n    state ={\r\n        userSet:false,\r\n    }\r\naddUser=(e)=>{\r\n    e.preventDefault();\r\n    let name=this.refs.name.value;\r\n    let email=this.refs.email.value;\r\n    let balance=this.refs.balance.value;\r\n    let user={name:name,email:email,balance:balance};\r\n    let options = {\r\n        method: 'POST',\r\n        body: JSON.stringify(user),\r\n        headers: { 'Content-Type': 'application/json' }\r\n    }\r\n        fetch('http://localhost:8000/addUser',options)\r\n        .then((res)=> res.json())\r\n        .then((json)=>{\r\n            this.setState({userSet:true});\r\n        })\r\n        .catch((err)=>console.log(err));\r\n    \r\n}\r\n    render(){\r\n        return(\r\n        <div>\r\n            {this.state.userSet && (<Redirect to='/'/>)}\r\n            <div className='section'></div>\r\n            <form onSubmit={this.addUser}>\r\n                <input type=\"text\" placeholder='name' ref='name'/>\r\n                <input type=\"email\" placeholder='Email' ref ='email'/>\r\n                <input type=\"number\" placeholder='Balance' ref ='balance'/>\r\n                <input type=\"submit\" className=\"btn\" value='add'/>\r\n            </form>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect() (AddUsers);","import React, { Component } from 'react';\r\nimport {Link,Route} from 'react-router-dom';\r\nimport AddUsers from './addUsers';\r\nclass UsersAdd extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"section\"></div>\r\n           <div className='container'>\r\n            <Link to='/adduser/addUsers' className='btn'>Add users</Link>\r\n            <Route path='/adduser/addUsers' component={AddUsers} />\r\n         </div>\r\n         </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default UsersAdd;","\r\nconst allUsers = (users)=>{\r\n    return {type:'ALL_USER',payload:users}\r\n}\r\n\r\nconst searchUsers= (users)=>{\r\n    return {type:'SEARCH_USER',payload:users}\r\n}\r\nconst deleteUser =(id)=>{\r\n    return {type:'DELETE_USER',payload:id}\r\n}\r\nconst update =(user)=>{\r\n    return {type:'UPDATE',payload:user}\r\n}\r\n\r\n\r\nexport {allUsers,searchUsers,deleteUser,update};","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {deleteUser,allUsers,update} from '../actions/action-user';\r\nimport {Redirect} from 'react-router-dom';\r\nclass UserList extends Component {\r\n    state={\r\n        targetUser:false,\r\n    }\r\n        componentDidMount =()=>{\r\n            fetch('http://localhost:8000/getAllUsers')\r\n            .then(res => res.json())\r\n            .then(users =>{\r\n                // console.log(users);\r\n                this.props.dispatch(allUsers(users.data))\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n        }\r\n\r\n        deleteUser =(id)=>{\r\n            let options = {\r\n                method: 'DELETE',\r\n                body:JSON.stringify({id:id}),\r\n                headers: { 'Content-Type': 'application/json' }\r\n            }\r\n                fetch('http://localhost:8000/deleteUser',options)\r\n                .then((res)=> res.json())\r\n                .then((success)=>{\r\n                    console.log('oky');\r\n                    this.props.dispatch(deleteUser(id));\r\n                })\r\n                .catch((err)=>{console.log(err)});\r\n            \r\n        }\r\n        updateTarget =(id)=>{\r\n            let options = {\r\n                method: 'PUT',\r\n                body:JSON.stringify({id:id}),\r\n                headers: { 'Content-Type': 'application/json'  }\r\n            }\r\n            fetch('http://localhost:8000/targetUpdate',options)\r\n            .then((res)=> res.json())\r\n            .then((user)=>{\r\n                // console.log(user);\r\n                localStorage.setItem('update',JSON.stringify(user.data));\r\n                this.setState({targetUser:true})\r\n            })\r\n            .catch((err)=>{console.log(err)}); \r\n        \r\n    }\r\n    render(){\r\n\r\n        let users = this.props.users;\r\n       \r\n        return(\r\n        <div>\r\n            {this.state.targetUser && (<Redirect to='/updateUser'/>)}\r\n            {users.map((value,index)=>{\r\n                   return (\r\n                    <div key={value._id} className=\"card\">\r\n                        <div className=\"card-content\">\r\n                    <div >\r\n                    <b>name : </b>{value.name}<br/>\r\n                    <b>email: </b>{value.email}<br/>\r\n                    <b>Balamce: </b>{value.balance}<br/>\r\n                    </div>\r\n                    <div className=\"button-right\">\r\n                        <button className=\"btn bule waves-effect waves-light\" onClick={()=>{this.updateTarget(value._id)}} >update</button>\r\n                        <button className=\"btn red waves-effect waves-light\" onClick={()=>{this.deleteUser(value._id)}}>Delete</button>\r\n                    </div>\r\n                    </div>\r\n                    </div>\r\n                   )\r\n            })}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (store)=>{\r\n    return {\r\n        users : store.users,\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps) (UserList);","import React, { Component } from 'react';\r\n// import {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport UsersList from \"./usersList\";\r\nimport {searchUsers} from \"../actions/action-user\";\r\nclass  Viewuser extends Component {\r\n    state={\r\n        isSearch:false,\r\n        searchValue:null,\r\n    }\r\n    searchUser = (e)=>{\r\n        e.preventDefault();\r\n        let search = this.refs.search.value; \r\n        if(search === \"\"){\r\n            return ;\r\n        } \r\n        fetch(`http://localhost:8000/search/${search}`)\r\n        .then(res => res.json())\r\n        .then(users =>{\r\n            // console.log(users);\r\n            this.props.dispatch(searchUsers(users.data))\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    render(){\r\n        return(\r\n        <div className=\"container\">\r\n         {/* {this.state.isSearch && (<Redirect to={`/search/${this.state.searchValue}`} />)} */}\r\n        <form onSubmit={this.searchUser} method=\"GET\">\r\n            <input type=\"search\" name=\"name\"  ref=\"search\" placeholder=\"search\"/>\r\n            <input className='btn' type='submit' value=\"search\"/>\r\n        </form>\r\n        <br/>\r\n        <UsersList/>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect() (Viewuser);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass UpdateUser extends Component {\r\n    state={\r\n        id:'',\r\n        name:'',\r\n        email:'',\r\n        balance:'',\r\n        setUpdate: false,\r\n    }\r\n   componentDidMount=()=>{\r\n       let user =localStorage.getItem('update');\r\n       user = JSON.parse(user);\r\n       this.setState({name:user.name})\r\n       this.setState({email:user.email})\r\n       this.setState({balance:user.balance})\r\n       this.setState({id:user._id})\r\n       localStorage.removeItem('update');\r\n   }\r\n   \r\n    updateUser=(e)=>{\r\n        e.preventDefault();\r\n        let name=this.refs.name.value;\r\n        let email=this.refs.email.value;\r\n        let balance=this.refs.balance.value;\r\n        let user={id:this.state.id,name:name,email:email,balance:balance};\r\n        let options = {\r\n            method: 'PUT',\r\n            body: JSON.stringify(user),\r\n            headers: { 'Content-Type': 'application/json' }\r\n        }\r\n            fetch('http://localhost:8000/updateUser',options)\r\n            .then((res)=> res.json())\r\n            .then((json)=>{\r\n                this.setState({ setUpdate: true});\r\n            })\r\n                        .catch((err)=>console.log(err));\r\n        \r\n    }\r\n    render(){\r\n        let user = '';\r\n        return(\r\n        <div className=\"container\">\r\n        {this.state.setUpdate && (<Redirect to='/'/>)}\r\n            <div className='section'></div>\r\n            <form onSubmit={this.updateUser}>\r\n                <input type=\"text\" placeholder='name' ref='name' defaultValue={this.state.name}/>\r\n                <input type=\"email\" placeholder='Email' ref ='email' defaultValue={this.state.email}/>\r\n                <input type=\"number\" placeholder='Balance' ref ='balance' defaultValue={this.state.balance}/>\r\n                <input type=\"submit\" className=\"btn\" value='update'/>\r\n            </form>\r\n        \r\n                    </div>\r\n                \r\n        )\r\n    }\r\n}\r\nexport default connect()(UpdateUser);","import React, { Component } from 'react';\r\n\r\nclass  About extends Component {\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n        <h1>this is About</h1>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Page404 extends Component {\r\n\r\n    render(){\r\n        return(\r\n        <div>\r\n            <h1>Page not found</h1>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Page404;","import {createStore,combineReducers} from 'redux';\r\nimport {users} from \"./reducers/reducers-users\";\r\nconst allReducer = combineReducers({users});\r\n\r\nlet store = createStore(allReducer);\r\n\r\nexport default store;","\r\n\r\nlet users = (state=[], action )=>{\r\n\r\nswitch (action.type){\r\n    case 'ALL_USER':\r\n    return action.payload;\r\n    case 'SEARCH_USER':\r\n    return action.payload;\r\n    case 'DELETE_USER':\r\n    let _id = action.payload;    \r\n    state = state.filter((value)=>{\r\n      return  value._id !== _id;\r\n    })\r\n    return state;\r\n    case 'UPDATE':\r\n    return action.payload;\r\n    default:\r\n    return state;\r\n}\r\n\r\n}\r\n\r\nexport {users};\r\n","import React, { Component } from 'react';\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport UsersAdd from './components/createuser';\nimport Viewuser from './components/viewuser';\nimport UpdateUser from './components/updateuser';\nimport About from './components/about';\nimport Page404 from './components/page404';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport './App.css'\nclass App extends Component {\n\n  render() {\n\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div className=\"App\">\n            \n            <Header/>\n            <Switch>\n            <Route path='/adduser' component={UsersAdd}/>\n            <Route path='/about' component={About}/>\n            <Route path='/updateUser' component={UpdateUser}/>\n            <Route  exact path='/' component={Viewuser}/>\n            <Route path='/' component={Page404}/>\n\n            </Switch>\n                <Footer/>\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}